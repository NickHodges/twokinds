---
import { db, Intros, Leads } from 'astro:db';
import MainLayout from '../../layouts/MainLayout.astro';
import '../../styles/index.css';
import SayingList from '../../components/SayingList.astro';
import Pagination from '../../components/Pagination.astro';
import Hero from '../../components/Hero.astro';
import { config } from '../../lib/config';
import { getAllSayings } from '../../lib/db-service';
import type { ExtendedSession } from '../../env';

// Get current user's session
const session = Astro.locals.session as ExtendedSession | null;

// Get all sayings with joins to get intro and lead texts
const sayingsData = await getAllSayings();
// Fetch related data
const intros = await db.select().from(Intros);
const leads = await db.select().from(Leads);

// Combine the data
const allSayings = sayingsData.map((saying) => {
  const intro = intros.find((i) => i.id === saying.intro);
  const firstLead = leads.find((l) => l.id === saying.firstLead);
  const secondLead = leads.find((l) => l.id === saying.secondLead);

  return {
    ...saying,
    introText: intro?.introText || 'Unknown intro',
    firstLeadText: firstLead?.leadText || 'Unknown lead',
    secondLeadText: secondLead?.leadText || 'Unknown lead',
  };
});

// Pagination
const pageSize = config.pagination.sayingsPerPage;
const currentPage = 1;
const totalPages = Math.ceil(allSayings.length / pageSize);
const startIndex = 0;
const endIndex = Math.min(startIndex + pageSize, allSayings.length);
const sayingsForCurrentPage = allSayings.slice(startIndex, endIndex);

// Create page object that mimics the one from paginate()
const page = {
  data: sayingsForCurrentPage,
  start: startIndex,
  end: endIndex - 1,
  size: pageSize,
  total: allSayings.length,
  currentPage: currentPage,
  lastPage: totalPages,
  url: {
    prev: null,
    next: totalPages > 1 ? '/sayings/2' : null,
  },
};

// Don't prerender so we always get fresh data
export const prerender = false;
---

<MainLayout>
  <div class="flex flex-col">
    <Hero />

    <div class="mt-4">
      <SayingList sayings={page.data} session={session} />

      {page.lastPage > 1 && <Pagination page={page} basePath="/sayings" />}
    </div>
  </div>
</MainLayout>
