---
import MainLayout from '../../layouts/MainLayout.astro';
import '../../styles/index.css';
import { getSayingById } from '../../lib/db-service';
import PageHeader from '../../components/PageHeader.astro';
import SayingDisplay from '../../components/SayingDisplay.astro';
import ActionButtons from '../../components/ActionButtons.astro';
import EmptyState from '../../components/EmptyState.astro';
import { db, Likes, eq, and, count } from 'astro:db';
import type { ExtendedSession } from '../../env';
import LikeButton from '../../components/LikeButton.astro';

// Get the saying ID from the URL
const { id } = Astro.params;
const sayingId = parseInt(id || '0');

// Get the current user's session
const session = Astro.locals.session as ExtendedSession | null;
const isAuthenticated = !!session?.user;

// Fetch the saying directly from Astro:DB
const saying = await getSayingById(sayingId);

// Check if the current user has liked this saying and get total likes
let isLiked = false;
let totalLikes = 0;

if (saying) {
  // Get total likes for this saying
  const likesResult = await db
    .select({ value: count() })
    .from(Likes)
    .where(eq(Likes.sayingId, sayingId))
    .get();
  totalLikes = likesResult?.value || 0;

  // Check if current user has liked
  const dbUserId = Astro.locals.dbUser?.id;
  if (dbUserId) {
    const like = await db
      .select()
      .from(Likes)
      .where(and(eq(Likes.userId, dbUserId), eq(Likes.sayingId, sayingId)))
      .get();
    isLiked = !!like;
  }
}

// Handle case where saying doesn't exist
const notFound = !saying;

// Don't prerender so we always get fresh data
export const prerender = false;
---

<MainLayout title={saying ? `${saying.intro}` : 'Saying Not Found'}>
  <div class="flex flex-col">
    <PageHeader title="" />

    {
      notFound ? (
        <EmptyState
          message="We couldn't find the saying you're looking for."
          callToAction={{ text: 'Return to home page', href: '/' }}
          isDatabaseError={true}
          devMessage="No saying found with the specified ID."
        />
      ) : (
        <div class="max-w-2xl mx-auto">
          <div class="mb-6">
            <SayingDisplay saying={saying} />
            <div class="mt-4 text-center">
              <LikeButton
                sayingId={sayingId}
                initialLiked={isLiked}
                totalLikes={totalLikes}
                isAuthenticated={isAuthenticated}
              />
            </div>
          </div>

          <ActionButtons
            buttons={[{ text: 'View all sayings', href: '/sayings', primary: true }]}
          />
        </div>
      )
    }
  </div>
</MainLayout>
